/* *****************************************************************
   See kss_example_engine.js for how to implement a template engine.
   ***************************************************************** */

var KssTemplateEngine,
	wrench = require('wrench');

/**
 * Export the KssTemplateEngine object.
 *
 * This is the base object used by all kss-node template engines.
 */
module.exports = KssTemplateEngine = function () {
	if (!(this instanceof KssTemplateEngine)) {
		return new KssTemplateEngine();
	}

	// Set the template engine API version used by this version of kss-node.
	this.API = {
		kss-node: '2.1.x',
		engine:   'undefined'
	};
};

/**
 * Checks the template engine configuration.
 *
 * An instance of KssTemplateEngine MUST NOT override this method. A process
 * controlling the template engine should call this method to verify the
 * specified template engine has been configured correctly.
 */
KssTemplateEngine.prototype.checkConfiguration = function() {
	// Call the setConfiguration() method of the KssTemplateEngine in use so we
	// can check that it has defined its configuration and methods.
	this.setConfiguration();
	if (this.API.engine == 'undefined') {
		throw 'This template engine is incompatible with KssTemplateEngine ' + this.API.engine + ' : unknown API version.';
	}
};

/**
 * Set the template engine configuration.
 *
 * An instance of KssTemplateEngine MUST override this method and set the needed
 * template engine configuration. Currently, the "configuration" is limited to
 * just the API version, but future versions of kss-node will have further
 * requirements.
 */
KssTemplateEngine.prototype.setConfiguration = function() {
	// Specify the API version of the KssTemplateEngine being used. For example:
	//   this.API = '2.1.x';
};

/**
 * Clone a template's files.
 *
 * This method is fairly simple; it copies one directory to the specified
 * location. An instance of KssTemplateEngine does not need to override this
 * method, but it can if it needs to do something more complicated.
 */
KssTemplateEngine.prototype.clone = function(templatePath, destinationPath) {
	console.log('Creating a new style guide template...');
	try {
		error = wrench.copyDirSyncRecursive(
			templatePath,
			destinationPath,
			{
				forceDelete: false,
				excludeHiddenUnix: true
			}
		);
		if (error) {
			throw error;
		}
	} catch (e) {
		console.log('Error! This folder already exists: ' + destinationPath);
		return;
	}
	console.log('You can change it as you like, and use it with your style guide like so:');
	console.log('');
	console.log('kss-node [sourcedir] --template "' + destinationPath + '"');
	console.log('');
};

/**
 * Initialize the style guide creation process.
 *
 * The kss-node CLI tool will pass a few pieces of information to the template
 * engine so that it can initialize the style guide generation process.
 *
 * @param {array}  sourcePath      Array of strings with the path(s) to the source files containing KSS comments.
 * @param {string} destinationPath The path to the style guide destination.
 * @param {string} templatePath    The path to the style guide template.
 * @param {Object} templateConfig  The configuration of the template read from a json file.
 */
KssTemplateEngine.prototype.init = function(sourcePath, destinationPath, templatePath, templateConfig) {
	// Template engines should save the configuration parameters.
	
};

KssTemplateEngine.prototype.processStyleguide = function (styleguide) {
};
